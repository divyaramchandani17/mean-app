{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple example NodeJS API project to demonstrate Swagger Documentation",
        "version": "1.0.0",
        "title": "Employees API",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "schemes": ["http"],
    "host": "localhost:8080",
    "basePath": "/api",
    "paths" : {
        "/employee/get/" : {
            "get" : {
                "summary" : "Get all the employees",
                "description": "Get all the employees",
                "produces": ["application/json"],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/employeesResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/employee/" : {
            "post" : {
                "summary" : "Save the employee",
                "description": "Save the employee",
                "produces": ["application/json"],
                "consumes": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "employee object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "employee" : {
                                    "type": "object",
                                    "$ref": "#/definitions/Employee"
                                } 
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/employeessResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/employee/update/{id}/" : {
            "put" : {
                "summary" : "Update the employees",
                "description": "Update the employees",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "employee id that needs to be deleted",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "employee object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "employee" : {
                                    "type": "object",
                                    "$ref": "#/definitions/Employee"
                                } 
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/employeesResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/employee/delete/{id}/" : {
            "delete" : {
                "summary" : "Delete the employee",
                "description": "Delete the employee",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "employee id that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/employeesResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/employee/get/{id}/" : {
            "get" : {
                "summary" : "Get the employee by id",
                "description": "Get the employee by id",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "employee id to get details",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/employee"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        }
    }, 
    "definitions": {
        "employeesResponse": {
            "type": "object",
            "properties": {
                "id": {
                     "type": "integer"
                },
                "empNo": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "age": {
                    "type": "number"
                },
                "gender": {
                    "type": "string"
                },
                "phoneNo": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "salary": {
                    "type": "number"
                },
                "hireDate": {
                    "type": "date"
                },
                "jobTitle": {
                    "type": "string"
                },
                "qualification": {
                    "type": "string"
                },
                "noOfExperienceYears": {
                    "type": "number"
                }
            }
        },
        "Employee": {
            "type": "object",
            "properties": {
                "empNo": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "age": {
                    "type": "number"
                },
                "gender": {
                    "type": "string"
                },
                "phoneNo": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "salary": {
                    "type": "number"
                },
                "hireDate": {
                    "type": "date"
                },
                "jobTitle": {
                    "type": "string"
                },
                "qualification": {
                    "type": "string"
                },
                "noOfExperienceYears": {
                    "type": "number"
                }
            }
        },
        "InvalidResponse": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }

        }
    }
}